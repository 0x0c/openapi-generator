# NOTE: This file is autogenerated by OpenAPI Generator (https://openapi-generator.tech).
# Do not modify this file directly. Modify the OpenAPI specification instead.


mutable struct Order <: SwaggerModel
    id::Union{ Nothing, Int64 } # id
    petId::Union{ Nothing, Int64 } # petId
    quantity::Union{ Nothing, Int32 } # quantity
    shipDate::Union{ Nothing, DateTime } # shipDate
    status::Union{ Nothing, String } # status
    complete::Union{ Nothing, Bool } # complete

    function Order(;id=nothing, petId=nothing, quantity=nothing, shipDate=nothing, status=nothing, complete=false)
        o = new()
        set_field!(o, :id, id)
        set_field!(o, :petId, petId)
        set_field!(o, :quantity, quantity)
        set_field!(o, :shipDate, shipDate)
        set_field!(o, :status, status)
        set_field!(o, :complete, complete)
        o
    end
end # type Order

const _name_map_Order = Dict{String,Symbol}(["id"=>:id, "petId"=>:petId, "quantity"=>:quantity, "shipDate"=>:shipDate, "status"=>:status, "complete"=>:complete])
const _field_map_Order = Dict{Symbol,String}([:id=>"id", :petId=>"petId", :quantity=>"quantity", :shipDate=>"shipDate", :status=>"status", :complete=>"complete"])
Swagger.name_map(::Type{ Order }) = _name_map_Order
Swagger.field_map(::Type{ Order }) = _field_map_Order

const _allowed_Order_status = ["placed", "approved", "delivered"]

function check_required(o::Order)
    true
end

function validate_field(o::Order, name::Symbol, val)
    if name === :status
        Swagger.validate_param(name, "Order", :enum, val, _allowed_Order_status)
    end
end
