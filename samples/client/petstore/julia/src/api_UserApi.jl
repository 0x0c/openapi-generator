# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

struct UserApi <: SwaggerApi
    client::Swagger.Client
end

"""
Create user
This can only be done by the logged in user.
Param: User::User (required)
Return: Nothing
"""
function createUser(_api::UserApi, User; _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "POST", Nothing, "/user", [], User)
    Swagger.set_header_accept(_ctx, [])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    Swagger.exec(_ctx)
end

"""
Creates list of users with given input array

Param: User::Vector{User} (required)
Return: Nothing
"""
function createUsersWithArrayInput(_api::UserApi, User; _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "POST", Nothing, "/user/createWithArray", [], User)
    Swagger.set_header_accept(_ctx, [])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    Swagger.exec(_ctx)
end

"""
Creates list of users with given input array

Param: User::Vector{User} (required)
Return: Nothing
"""
function createUsersWithListInput(_api::UserApi, User; _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "POST", Nothing, "/user/createWithList", [], User)
    Swagger.set_header_accept(_ctx, [])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    Swagger.exec(_ctx)
end

"""
Delete user
This can only be done by the logged in user.
Param: username::String (required)
Return: Nothing
"""
function deleteUser(_api::UserApi, username::String; _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "DELETE", Nothing, "/user/{username}", [])
    Swagger.set_param(_ctx.path, "username", username)  # type String
    Swagger.set_header_accept(_ctx, [])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    Swagger.exec(_ctx)
end

"""
Get user by user name

Param: username::String (required)
Return: User
"""
function getUserByName(_api::UserApi, username::String; _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", User, "/user/{username}", [])
    Swagger.set_param(_ctx.path, "username", username)  # type String
    Swagger.set_header_accept(_ctx, ["application/xml", "application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    Swagger.exec(_ctx)
end

"""
Logs user into the system

Param: username::String (required)
Param: password::String (required)
Return: String
"""
function loginUser(_api::UserApi, username::String, password::String; _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", String, "/user/login", [])
    Swagger.set_param(_ctx.query, "username", username)  # type String
    Swagger.set_param(_ctx.query, "password", password)  # type String
    Swagger.set_header_accept(_ctx, ["application/xml", "application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    Swagger.exec(_ctx)
end

"""
Logs out current logged in user session

Return: Nothing
"""
function logoutUser(_api::UserApi; _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", Nothing, "/user/logout", [])
    Swagger.set_header_accept(_ctx, [])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    Swagger.exec(_ctx)
end

"""
Updated user
This can only be done by the logged in user.
Param: username::String (required)
Param: User::User (required)
Return: Nothing
"""
function updateUser(_api::UserApi, username::String, User; _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "PUT", Nothing, "/user/{username}", [], User)
    Swagger.set_param(_ctx.path, "username", username)  # type String
    Swagger.set_header_accept(_ctx, [])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    Swagger.exec(_ctx)
end

export createUser, createUsersWithArrayInput, createUsersWithListInput, deleteUser, getUserByName, loginUser, logoutUser, updateUser
