# NOTE: This file is autogenerated by OpenAPI Generator (https://openapi-generator.tech).
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct StoreApi <: SwaggerApi
    client::Swagger.Client
end

"""
Delete purchase order by ID
For valid response try integer IDs with value < 1000. Anything above 1000 or nonintegers will generate API errors
Param: orderId::String (required)
Return: Nothing
"""
function deleteOrder(_api::StoreApi, orderId::String; _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "DELETE", Nothing, "/store/order/{orderId}", [])
    Swagger.set_param(_ctx.path, "orderId", orderId)  # type String
    Swagger.set_header_accept(_ctx, [])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    Swagger.exec(_ctx)
end

"""
Returns pet inventories by status
Returns a map of status codes to quantities
Return: Dict{String, Int32}
"""
function getInventory(_api::StoreApi; _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", Dict{String, Int32}, "/store/inventory", ["api_key"])
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    Swagger.exec(_ctx)
end

"""
Find purchase order by ID
For valid response try integer IDs with value <= 5 or > 10. Other values will generated exceptions
Param: orderId::Int64 (required)
Return: Order
"""
function getOrderById(_api::StoreApi, orderId::Int64; _mediaType=nothing)
    Swagger.validate_param("orderId", "getOrderById", :maximum, orderId, 5, false)
    Swagger.validate_param("orderId", "getOrderById", :minimum, orderId, 1, false)

    _ctx = Swagger.Ctx(_api.client, "GET", Order, "/store/order/{orderId}", [])
    Swagger.set_param(_ctx.path, "orderId", orderId)  # type Int64
    Swagger.set_header_accept(_ctx, ["application/xml", "application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    Swagger.exec(_ctx)
end

"""
Place an order for a pet

Param: Order::Order (required)
Return: Order
"""
function placeOrder(_api::StoreApi, Order; _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "POST", Order, "/store/order", [], Order)
    Swagger.set_header_accept(_ctx, ["application/xml", "application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    Swagger.exec(_ctx)
end

export deleteOrder, getInventory, getOrderById, placeOrder
